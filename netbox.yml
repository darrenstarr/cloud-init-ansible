---
- hosts: localhost
  become: yes

  vars:
    netbox_version: 3.7.5
    postgres_password: simple_password
  
  tasks:
    - name: Install required packages
      apt:
        name:
          - postgresql
          - python3
          - python3-pip
          - python3-venv
          - python3-dev
          - build-essential
          - libxml2-dev
          - libxslt1-dev
          - libffi-dev
          - libpq-dev
          - libssl-dev
          - zlib1g-dev
          - redis-server
        state: present

    - name: Install libpq-dev
      apt:
        name: libpq-dev
        state: present

    - name: Install psycopg2 using pip
      pip:
        name: psycopg2

    - name: Create netbox user
      become: yes
      become_user: postgres
      postgresql_user:
        name: netbox
        password: "{{ postgres_password }}"
        role_attr_flags: CREATEDB

    - name: Create netbox database
      become: yes
      become_user: postgres
      postgresql_db:
        name: netbox
        owner: netbox

    - name: Grant privileges
      become: yes
      become_user: postgres
      postgresql_privs:
        db: netbox
        type: table
        roles: netbox
        privs: CREATE
        objs: ALL_IN_SCHEMA

    - name: Create netbox group
      group:
        name: netbox
        system: yes

    - name: Create netbox user and group
      user:
        name: netbox
        group: netbox
        system: yes
        
    - name: Create directory /opt/netbox and change owner to netbox
      file:
        path: /opt/netbox
        state: directory
        owner: netbox
        group: netbox
        mode: '0755'

    - name: Clone netbox git repo
      become: yes
      become_user: netbox
      git:
        repo: 'https://github.com/netbox-community/netbox.git'
        dest: /opt/netbox
        version: master
        depth: 1

    - name: Remove contents of /home/netbox/.ansible directory
      file:
        path: /home/netbox/.ansible
        state: absent
      become: yes
      become_user: netbox

    - name: Check if configuration.py exists
      stat:
        path: /opt/netbox/netbox/netbox/configuration.py
      register: result

    - name: Copy configuration_example.py to configuration.py if it does not exist
      copy:
        src: /opt/netbox/netbox/netbox/configuration_example.py
        dest: /opt/netbox/netbox/netbox/configuration.py
      when: result.stat.exists == False

    
